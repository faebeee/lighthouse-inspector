// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id                 Int             @id @default(autoincrement())
  name               String
  sites              Site[]
  tags               TagsOnProject[]
  repoUrl            String?
  interval_reporting Boolean         @default(false)
}

model Site {
  id          Int                   @id @default(autoincrement())
  name        String
  project     Project               @relation(fields: [projectId], references: [id])
  projectId   Int
  url         String
  reports     LighthouseRunReport[]
  is_running  Boolean
  share_token String?
}

model LighthouseRunReport {
  id                 Int      @id @default(autoincrement())
  site               Site     @relation(fields: [siteId], references: [id])
  siteId             Int
  date               DateTime
  finalUrl           String
  performance        Float
  accessibility      Float
  bestPractices      Float
  seo                Float
  pwa                Float
  serverResponseTime Float?
  tti                Float?
  htmlReportFile     String?
  type               String
  stacks             String[] @default([])
  is_crawlable       Boolean  @default(false)
}

model Tag {
  id       Int             @id @default(autoincrement())
  projects TagsOnProject[]
  name     String
}

model TagsOnProject {
  project   Project @relation(fields: [projectId], references: [id])
  projectId Int

  tag   Tag @relation(fields: [tagId], references: [id])
  tagId Int // relation scalar field (used in the `@relation` attribute above)

  @@id([tagId, projectId])
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
}

model Beacon {
  id    Int      @id @default(autoincrement())
  key   String   @unique
  date  DateTime
  value String?
}
